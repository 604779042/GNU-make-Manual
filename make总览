make工具能够自动决定哪部分程序需要被重新编译，并且调用命令去重新编译他们。GNU make最早是Richard Stallman和Roland McGrath实现的，不过从V3.76开始Paul D. Smith开始接收相关开发。
GNU make 符合IEEE 1003.2-1992 标准的6.2章节（POSIX.2）。
我们的例子主要用C语言写成的，因为这比较普遍通用。但是你可以编译任何程序，只要这个程序支持shell命令。实际上，make不局限程序。你可以利用它描述任何需要自动话执行的任务（当其中一些文件改变时，那些任务中会自动更新）。
开始
当你准备利用make的时候，你首先需要创建一个makefile文件，这份文件描述了文件中的关系以及提供更新文件的命令。


Preparing

Preparing and Running Make
To prepare to use make, you must write a file called the makefile that describes the relationships among files in your program and provides commands for updating each file. In a program, typically, the executable file is updated from object files, which are in turn made by compiling source files.

Once a suitable makefile exists, each time you change some source files, this simple shell command:

make
suffices to perform all necessary recompilations. The make program uses the makefile data base and the last-modification times of the files to decide which of the files need to be updated. For each of those files, it issues the recipes recorded in the data base.

You can provide command line arguments to make to control which files should be recompiled, or how. See How to Run make.